quarkus.http.port=8080
quarkus.swagger-ui.always-include=true
quarkus.kafka.devservices.enabled = false
quarkus.http.cors=true


keycloak.auth-server-url=http://${KEYCLOAK_URL:"localhost:8480"}/auth
keycloak.realm=kogito
keycloak.resource=kogito-app
keycloak.credentials.secret=secret
keycloak.cors=true
keycloak.ssl-required=external
keycloak.bearer-only=true
keycloak.use-resource-role-mappings=true

kogito.dataindex.http.url=http://${DATA_INDEX_URL:"localhost:8180"}
kogito.service.url=http://localhost:8080
kogito.dataindex.ws.url=ws://${DATA_INDEX_URL:"localhost:8180"}
kogito.persistence.type=infinispan

quarkus.infinispan-client.server-list=${QUARKUS_INFINISPAN_CLIENT_SERVER_LIST:"localhost:11222"}
quarkus.infinispan-client.use-auth=false

%prod.kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:"localhost:29092"}

fr.msa.imsa.rest.TacheRemoteServices/mp-rest/url=http://${IMSA_SERVICES_URL:"localhost:8680"}
fr.msa.imsa.rest.TacheRemoteServices/mp-rest/scope=javax.enterprise.context.ApplicationScoped


mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka
mp.messaging.incoming.kogito_incoming_stream.topic=msaReq
mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka
mp.messaging.outgoing.kogito_outgoing_stream.topic=end
mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.incoming.initt1OK.connector=smallrye-kafka
mp.messaging.incoming.initt1OK.topic=initt1OK
mp.messaging.incoming.initt1OK.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.initt1KO.connector=smallrye-kafka
mp.messaging.incoming.initt1KO.topic=initt1KO
mp.messaging.incoming.initt1KO.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.initt2OK.connector=smallrye-kafka
mp.messaging.incoming.initt2OK.topic=initt2OK
mp.messaging.incoming.initt2OK.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.initt2KO.connector=smallrye-kafka
mp.messaging.incoming.initt2KO.topic=initt2KO
mp.messaging.incoming.initt2KO.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


# mp.messaging.outgoing.kogito_outgoing_stream.connector=quarkus-http
# mp.messaging.outgoing.kogito_outgoing_stream.url=${K_SINK}

mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-variables-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-variables-events.topic=kogito-variables-events
mp.messaging.outgoing.kogito-variables-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


#Job-service
kogito.jobs-service.url=http://${JOB_SERVICE:"localhost:8580"}

# quarkus.reactive-messaging.kafka.serializer-autodetection.enabled=false

quarkus.log.level=INFO
quarkus.log.category."org.kie.kogito".level=INFO





